
(** This script is to "Check service availability"
//Three different types of wait time
@Params maxWait: 
@Params FullMaxWait: 
@Params minWait: 


@Version:  2.0 04/08/2022 **)

to checkserviceAvailability FullMaxWait, maxWait, minWait
	//Sets Resultsdata as a reference variable for the Results_data.xlsx. This is to write the extracted data for comparisons
	set Resultsdata to Workbook(ResourcePath("CopperPlant_EggplantSample.xlsx"))
	
	//sets the worsheet named Sheet1 to Worksheet1
	set worksheet1 to Resultsdata.Worksheet("Sheet1")
	
	
	repeat for each key of the keys of global spreadsheet_data
		set speed to empty
		Log "IterationCount: "&repeatindex()
		Log "Cell data being used from rownum: "&global spreadsheet_data.(key)."Cellcount"+1
		try  //Try catch block to ensure it flows through the entire data sheet
			-- enter first name
			Click "Check_service_availability/accountowner_Fname"
			TypeText ControlKey,"a",DeleteKey
			TypeText global spreadsheet_data.(key)."firstname"
			TypeText Tab
			
			
			-- enter second name]
			TypeText ControlKey,"a",DeleteKey
			TypeText global spreadsheet_data.(key)."Lastname"
			TypeText Tab
			
			-- enter address ,This scenario is when the user tries repeatedly
			if ImageFound("Select_your_Location/AddaNewLocation")
				//repeat loop since the link is not reactive sometimes
				repeat 2 times
					
					if not ImageFound(Image:"Select_your_Location/serviceaddress")
						Click "Select_your_Location/AddaNewLocation"
					else
						Log "Found the address field"
						Exit repeat
					end if 
				end repeat
				
				Click "Select_your_Location/serviceaddress"
				TypeText ControlKey,"a",DeleteKey
				SetOption KeyDownDelay, 0.09
				TypeText global spreadsheet_data.(key)."Address"
				Assert imageFound(Image: "Select_your_Location/DropDown", WaitFor: maxWait) with Exception !"[[my name]]: An exception occured with displaying the location"
				TypeText returnKey
				
				Assert imageFound(Image: "Select_your_Location/LocationSelected", SearchRectangle:["Select_your_Location/LocationSelected_A","Select_your_Location/LocationSelected_B"], WaitFor: maxWait) with Exception !"[[my name]]: An exception occured with selecting location"
				SetOption KeyDownDelay,0.02 //0.02 is the Default value, so setting it back to default value
				
				//To Validate the address,assign to variable to compare
				put global spreadsheet_data.(key)."Address" into AddVal
				Log AddVal
				Put readtext("Select_your_Location/Location_A","Select_your_Location/Location_B") into ActAdd
				//Compare the Address
				Assert AddVal is (ActAdd) with error !"[[my name]]: Actual address is [[ActAdd]]"
		
				//Click on Check Service Availability
				Click Image: "Select_your_Location/CheckServiceAvailability"
				
				//Handle the POPUP if it is displayed	
				Wait 3  // This is for the popup to trigger
				// if else condition to handle if popup is not displayed
				if ImageFound(Image: "Select_your_Location/YesChangeLocation", WaitFor: minWait)
					Click Image: "Select_your_Location/YesChangeLocation"
					put time into start_time 
					log start_time
					Assert imageFound(Image:"Select_Your_Products/Internet", WaitFor:FullMaxWait) with Exception !"[[my name]]: An exception occured with launching products"
					Assert imageFound(Image:"Select_Your_Products/Select", WaitFor:FullMaxWait) with Exception !"[[my name]]: An exception occured with displaying products"
					put time into end_time 
					log end_time 
					put end_time- start_time into time_Interval
					log "Duration for Products Page: "&time_Interval
					// Writing the duration of displaying the Products on the Page 
					put  time_Interval into worksheet1.Cell("F"&global spreadsheet_data.(key)."Cellcount"+1)
					put  end_time into worksheet1.Cell("G"&global spreadsheet_data.(key)."Cellcount"+1)
				else
					put time into start_time 
					log start_time
					Assert imageFound(Image:"Select_Your_Products/Internet", WaitFor:FullMaxWait) with Exception !"[[my name]]: An exception occured with launching products"
					Assert imageFound(Image:"Select_Your_Products/Select", WaitFor:FullMaxWait) with Exception !"[[my name]]: An exception occured with displaying products"
					put time into end_time 
					log end_time 
					put end_time- start_time into time_Interval
					log "Duration for Products Page: "&time_Interval
					// Writing the duration of displaying the Products on the Page 
					put  time_Interval into worksheet1.Cell("F"&global spreadsheet_data.(key)."Cellcount"+1)
					put  end_time into worksheet1.Cell("G"&global spreadsheet_data.(key)."Cellcount"+1)
				end if
				
			else
				
				//This scenario when the user tries for first time. Add new Location would not be available for first time
				Click "Select_your_Location/serviceaddress"
				TypeText ControlKey,"a",DeleteKey
				SetOption KeyDownDelay, 0.09
				TypeText global spreadsheet_data.(key)."Address"
				Assert imageFound(Image: "Select_your_Location/DropDown", WaitFor: maxWait) with Exception !"[[my name]]: An exception occured with displaying the location"
				TypeText returnKey
				
				Assert imageFound(Image: "Select_your_Location/LocationSelected", WaitFor: maxWait) with Exception !"[[my name]]: An exception occured with selecting location"
				SetOption KeyDownDelay,0.02 //0.02 is the Default value, so setting it back to default value
				//To Validate the address,assign to variable to compare
				put global spreadsheet_data.(key)."Address" into AddVal
				Log AddVal
				Put readtext("Select_your_Location/Location_A","Select_your_Location/Location_B") into ActAdd
				//Compare the Address
				Assert AddVal is (ActAdd) with error !"[[my name]]: Actual address is [[ActAdd]]"
				
				//Click Service Availability button
				Click Image: "Select_your_Location/CheckServiceAvailability"
				put time into start_time 
				log start_time
				Assert imageFound(Image:"Select_Your_Products/Internet", WaitFor:FullMaxWait) with Exception !"[[my name]]: An exception occured with launching products"
				Assert imageFound(Image:"Select_Your_Products/Select", WaitFor:FullMaxWait) with Exception !"[[my name]]: An exception occured with displaying products"
				put time into end_time 
				log end_time 
				put end_time- start_time into time_Interval
				log "Duration for Products Page: "&time_Interval
				// Writing the duration of displaying the Products on the Page 
				put  time_Interval into worksheet1.Cell("F"&global spreadsheet_data.(key)."Cellcount"+1)
				put  end_time into worksheet1.Cell("G"&global spreadsheet_data.(key)."Cellcount"+1)
			end if 
			-- check max speed
			//********************************* Select Your Product Page***********************************
			if not ImageFound({Image:"Select_Your_Products/UnlimitedInternet", WaitFor:minWait})
				// No Unlimited Internet means go back to Previous Page
				Click Image:"Select_Your_Products/Internet"
				TypeText PageDown
				Assert imageFound(Image:"Select_Your_Products/Back", WaitFor:maxWait) with Exception !"[[my name]]: An exception occured with navigating to previous page"
				Click Image: "Select_Your_Products/Back"
				put 0 into worksheet1.Cell("D"&global spreadsheet_data.(key)."Cellcount"+1) //Since no unlimited internet, writing 0 to file
				put "N/A" into worksheet1.Cell("H"&global spreadsheet_data.(key)."Cellcount"+1) //Since no unlimited internet, writing 0 to file for duration
				Log "-----------Reached the end----------------"
			else
				//****************************Set Up Your Service PopUp Window*********************************
				//Calculating time taken for the popup window to display data
				put time into starttime 
				log starttime
				//Click on Select button in Unlimited internet option
				Click {Image:"Select_Your_Products/Select",WaitFor:minWait}
				// if else condition since it sometimes displays data by clicking on Continue button
				if ImageFound(Image:"Set_Up_Service/QUnlimitedInternet", WaitFor:FullMaxWait)
					Assert imageFound(Image:"Set_Up_Service/QUnlimitedInternet") with Exception !"[[my name]]: An exception occured with launching products"
				else 
					Log "SetUpService Unlimited Window is not getting populated, hence clicking on continue button as some times it populates the window" 
					Click Image: "Set_Up_Service/Continue"
					put  TRUE into worksheet1.Cell("J"&global spreadsheet_data.(key)."Cellcount"+1)
					Assert imageFound(Image:"Set_Up_Service/QUnlimitedInternet", WaitFor:maxWait) with Exception !"[[my name]]: An exception occured with launching products"
				end if
				put time into endtime 
				log endtime 
				put endtime- starttime into timeInterval
				log "Duration of displaying internet speed popup window: "&timeInterval
				// Writing the duration of displaying the internet speed to the file 
				put  timeInterval into worksheet1.Cell("H"&global spreadsheet_data.(key)."Cellcount"+1)
				put  endtime into worksheet1.Cell("I"&global spreadsheet_data.(key)."Cellcount"+1)
				//To compare the speed, reading data from global spreadsheet
				put global spreadsheet_data.(key)."Max_speed" into ExpSpeed
				Log "Expected internet speed: "&ExpSpeed
				//Extracting data from the application
				Put  readtext("Set_Up_Service/InternetSpeed_A","Set_Up_Service/InternetSpeed_B") into Readspeed
				put word 1 delimited by "Mbps " of Readspeed into speed
				Assert speed is (ExpSpeed) with error !"[[my name]]: Actual speed is [[speed]]"
				put speed into worksheet1.Cell("D"&global spreadsheet_data.(key)."Cellcount"+1)  // Writing the Actual data into spreadsheet
				
				
				
				//To scroll down-- To close the Popup window
				Click Image:"Set_Up_Service/QUnlimitedInternet" 
				TypeText PageDown
				Assert imageFound(Image:"Set_Up_Service/CancelSelection", WaitFor:maxWait) with Exception !"[[my name]]: An exception occured with PageDown Key"
				Click "Set_Up_Service/CancelSelection"
				Assert imageFound(Image:"Select_Your_Products/Internet", WaitFor:maxWait) with Exception !"[[my name]]: An exception occured with navigating to products page"
				-- go back,************************ Navigating back to Select Your Location Page***************************************
				Click {Image:"Select_Your_Products/Internet"}
				TypeText PageDown
				Assert imageFound(Image:"Select_Your_Products/Back", WaitFor:maxWait) with Exception !"[[my name]]: An exception occured with navigating to previous page"
				Click {Image: "Select_Your_Products/Back"}
				Assert imageFound(Image: "Select_your_Location/AddaNewLocation", WaitFor: maxWait) with Exception !"[[my name]]: An exception occured navigating to home page"
				Log "-----------Reached the end----------------"
			end if
		catch anException
			// This would get executed if any of the code in the try loop fail
			Log "*****CatchException*******Navigting back to Select Your Location Page*************************"
			//This if condition incase the internet speed popup window hangs
			if ImageFound(Image:"Set_Up_Service/CancelSelection", WaitFor: maxWait)
				Click [Image:"Set_Up_Service/CancelSelection", WaitFor: maxWait]
				Click {Image:"Select_Your_Products/Internet", WaitFor: maxWait}
				Click {Image:"Select_Your_Products/Back", WaitFor: maxWait}
				WaitFor maxWait,Image:"Check_service_availability/accountowner_Fname"
			end if
			//This if condition incase the internet speed popup window hangs after displaying data
			if ImageFound(Image:"Set_Up_Service/QUnlimitedInternet", WaitFor: maxWait)
				Click {Image:"Set_Up_Service/QUnlimitedInternet", WaitFor: maxWait}
				TypeText PageDown
				Click {Image:"Set_Up_Service/CancelSelection", WaitFor: maxWait}
				Click {Image:"Select_Your_Products/Internet", WaitFor: maxWait}
				Click {Image:"Select_Your_Products/Back", WaitFor: maxWait}
				WaitFor maxWait,Image:"Check_service_availability/accountowner_Fname"
			end if
			//This if condition incase the Product Page hangs
			if ImageFound(Image:"Select_Your_Products/Internet", WaitFor: maxWait)
				Click {Image:"Select_Your_Products/Internet", WaitFor: maxWait}
				//The below condition if the Page hangs and needs a refresh
				if not ImageFound(Image:"Select_Your_Products/Back", WaitFor: maxWait)
					Click {Image:"Browser/RefreshPage"}
					WaitFor maxWait, "Select_Your_Products/Select"
					ScrollWheelDown 4
					Click {Image:"Select_Your_Products/Internet", WaitFor: maxWait}				
					Click {Image:"Select_Your_Products/Back", WaitFor: maxWait}
					WaitFor maxWait,Image:"Check_service_availability/accountowner_Fname"
				else
					Click {Image:"Select_Your_Products/Back", WaitFor: maxWait}
					WaitFor maxWait,Image:"Check_service_availability/accountowner_Fname"
				end if
			end if	
			
			Log "-----------Reached the end in case of exception----------------"
			
		end try
		
	end repeat
	
	
end checkserviceAvailability
